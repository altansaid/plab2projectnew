# Development Profile - PostgreSQL Configuration
# Use this profile for local development with PostgreSQL
# Run with: ./gradlew bootRun --args='--spring.profiles.active=dev'

# PostgreSQL Database Configuration - Use environment variables
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/plabdb}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=${DATABASE_USERNAME:plabuser}
spring.datasource.password=${DATABASE_PASSWORD:}

# JPA/Hibernate Configuration for Development
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Flyway Configuration - Enabled with baseline for existing schema
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=0
spring.flyway.baseline-description=Existing database baseline
spring.flyway.locations=classpath:db/migration
spring.flyway.clean-disabled=true
spring.flyway.out-of-order=true
spring.flyway.ignore-missing-migrations=true

# JWT Configuration (Development) - Use environment variables
jwt.secret=${JWT_SECRET:dev_jwt_secret_key_for_development_only_not_for_production}
jwt.expiration=${JWT_EXPIRATION:86400000}

# CORS Configuration (Development)
cors.allowed-origins=http://localhost:3000,http://localhost:3001,http://localhost:5173

# Security Settings (Development)
spring.h2.console.enabled=false
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=lax

# File Upload Configuration
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

# Google OAuth Configuration (Development) - Enable real Google OAuth
google.oauth.enabled=${GOOGLE_OAUTH_ENABLED:true}
google.client.id=${GOOGLE_CLIENT_ID:}
google.client.secret=${GOOGLE_CLIENT_SECRET:}

# Development Logging - Optimized for Performance
logging.level.root=WARN

# Auth reset token configuration (minutes)
auth.reset-token.minutes=${AUTH_RESET_TOKEN_MINUTES:15}
logging.level.com.plabpractice.api=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.orm.jdbc.bind=WARN
logging.level.org.springframework.messaging=WARN
logging.level.org.springframework.web.socket=WARN 
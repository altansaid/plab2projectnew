# Default Profile Configuration - Set to dev for local development, override for production
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev}

# Server Configuration
server.port=${PORT:8080}

# Database Configuration - Use environment variables for production
spring.datasource.url=${DATABASE_URL:jdbc:h2:file:./data/plabdb}
spring.datasource.driverClassName=${DATABASE_DRIVER:org.h2.Driver}
spring.datasource.username=${DATABASE_USERNAME:sa}
spring.datasource.password=${DATABASE_PASSWORD:}

# JPA/Hibernate Configuration  
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:validate}
spring.jpa.show-sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${JPA_FORMAT_SQL:false}
spring.jpa.properties.hibernate.dialect=${JPA_DIALECT:org.hibernate.dialect.H2Dialect}

# Flyway Configuration
spring.flyway.enabled=${FLYWAY_ENABLED:true}
spring.flyway.baseline-on-migrate=${FLYWAY_BASELINE_ON_MIGRATE:true}
spring.flyway.baseline-version=${FLYWAY_BASELINE_VERSION:0}
spring.flyway.baseline-description=${FLYWAY_BASELINE_DESCRIPTION:Existing database baseline}
spring.flyway.locations=${FLYWAY_LOCATIONS:classpath:db/migration}
spring.flyway.clean-disabled=${FLYWAY_CLEAN_DISABLED:true}
spring.flyway.out-of-order=${FLYWAY_OUT_OF_ORDER:true}
spring.flyway.ignore-missing-migrations=${FLYWAY_IGNORE_MISSING:true}

# JWT Configuration - Use environment variables with safe defaults
jwt.secret=${JWT_SECRET:default_secret_for_development_only_minimum_32_characters}
jwt.expiration=${JWT_EXPIRATION:86400000}

# CORS Configuration - Default to common development ports
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001,http://localhost:5173}

# H2 Console (disabled by default for security)
spring.h2.console.enabled=${H2_CONSOLE_ENABLED:false}

# Actuator for health checks
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
management.health.db.enabled=true

# Logging Configuration
logging.level.root=${LOG_LEVEL_ROOT:WARN}
logging.level.com.plabpractice.api=${LOG_LEVEL_APP:INFO}
logging.level.org.springframework.web=${LOG_LEVEL_WEB:WARN}
logging.level.org.hibernate=${LOG_LEVEL_HIBERNATE:ERROR}
logging.level.org.springframework.messaging=${LOG_LEVEL_MESSAGING:WARN}
logging.level.org.springframework.web.socket=${LOG_LEVEL_WEBSOCKET:WARN}

# Security Headers
server.servlet.session.cookie.secure=${COOKIE_SECURE:false}
server.servlet.session.cookie.http-only=${COOKIE_HTTP_ONLY:true}
server.servlet.session.cookie.same-site=${COOKIE_SAME_SITE:strict}

# WebSocket Configuration
spring.websocket.path=/ws

# Compression Configuration
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml
server.compression.min-response-size=1024

# Additional Security Headers
server.servlet.session.timeout=30m
server.error.whitelabel.enabled=false

# Google OAuth Configuration
google.oauth.enabled=${GOOGLE_OAUTH_ENABLED:false}
google.client.id=${GOOGLE_CLIENT_ID:}
google.client.secret=${GOOGLE_CLIENT_SECRET:}

# Additional Security Headers
security.headers.frame-options=DENY
security.headers.content-type-options=nosniff
security.headers.xss-protection=1; mode=block
security.headers.cache-control=no-cache, no-store, max-age=0, must-revalidate
security.headers.pragma=no-cache
security.headers.expires=0
security.headers.cross-origin-opener-policy=unsafe-none
security.headers.cross-origin-embedder-policy=unsafe-none
security.headers.cross-origin-resource-policy=cross-origin